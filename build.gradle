plugins {
    id 'java'
    id 'com.moowork.node' version '1.3.1'
    id 'org.springframework.boot' version '2.4.3'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'org.asciidoctor.convert' version '1.5.8'
    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
}

jar {
    archivesBaseName = "dev-dictionary"
}

group = 'toy'
version = '3.0'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('snippetsDir', file("build/generated-snippets"))
}

dependencies {
    //Spring Boot Starter
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.apache.poi:poi:5.0.0'
    implementation 'org.apache.poi:poi-ooxml:5.0.0'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'mysql:mysql-connector-java'
    testRuntimeOnly 'com.h2database:h2'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'

    //P6SPY
    implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.6.2'

    //QueryDSL
    implementation 'com.querydsl:querydsl-jpa'

    //JSON Simple
    implementation 'com.googlecode.json-simple:json-simple:1.1.1'

    //Apache Commons
    implementation 'commons-io:commons-io:2.8.0'
    implementation 'org.apache.commons:commons-lang3:3.12.0'

    //Apache OpenNLP
    implementation 'org.apache.opennlp:opennlp-tools:1.9.3'


}

test {
    outputs.dir snippetsDir
    useJUnitPlatform()
}

asciidoctor {
    inputs.dir snippetsDir
    dependsOn test
}

//QueryDSL
def querydslDir = "$buildDir/generated/querydsl"
querydsl {
    jpa = true
    querydslSourcesDir = querydslDir
}
sourceSets {
    main.java.srcDir querydslDir
}
configurations {
    querydsl.extendsFrom compileClasspath
}
compileQuerydsl {
    options.annotationProcessorPath = configurations.querydsl
}

node {
    download = true
    version = '14.17.0'
    npmVersion = '6.14.13'
    workDir = file('./vue')
    npmWorkDir = file('./vue')
    nodeModulesDir = file('./vue')
}

task buildNpm(type: NpmTask) {
    args = ['install']
    inputs.files file('package.json')
    outputs.files file('node_modules')
}

task buildVue(type: NpmTask, dependsOn: buildNpm) {
    args = ['run', 'build']
}

processResources.dependsOn 'buildVue'
